openapi: 3.0.0
info:
  title: Demo del curso
  description: 
    Optional *multiline* or

    ======================= 
    
    
    ---


    ![Image](https://www.everis.com/sites/all/themes/everis/logo.png "Icon")
    
    
  
    
    
    single-line **description** in [leer mas ...](http://www.example.com) ...
    
    
    Lista

      1. elemento

      1. otro


    
    
    > ejemplo
  version: 0.1.9
  contact:
    name: Javi
    email: javi@example.com
    url: http://example.com/javi
  license:
    name: MIT
    url: http://example.com/license
  termsOfService: http://example.com/terms
servers:
  - url: http://api.example.com/v1
    description: Main (production) server
  - url: http://staging-api.example.com
    description: Internal staging server for testing
externalDocs:
  url: http://example.com/apidoc
  description: Versión pdf
tags:
  - name: read-only
    description: Solo lectura, no requiere autenticación
  - name: users-resources
    description: Mantenimiento de usuarios
  - name: roles-resources
    description: Mantenimiento de grupos
paths:
  /usuarios:
    get:
      summary: Lista de usuarios.
      description: Optional extended description in CommonMark or HTML.
      operationId: getAllUsers
      tags:
        - users-resources
        - read-only
      parameters:
        - name: pag
          in: query
          required: false
          description: Numero de pagina actual en base 0
          schema:
            type: integer
        - name: rows
          in: query
          required: false
          description: Numero de filas por pagina actual, por defecto son 20.
          schema:
            type: integer
            minimum: 1
            maximum: 100
          examples:
            diez:
              value: 10
            veinte: 
              value: 20
            cincuenta:
              value: 50
      responses:
        '200':    # status code
          description: Array de usuarios
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Users'
        400:
          description: Numero de pagina o filas incorrecto
    post:
      summary: Crea un nuevo usuario.
      description: Optional extended description in CommonMark or HTML.
      operationId: postUser
      tags:
        - users-resources
      requestBody:
        description: Datos del usuario a crear
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
          application/xml:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        201:   
          description: Usuario creado
          headers:
            location:
              description: Url para consultar el nuevo usuario
              schema:
                type: string
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
  "/usuarios/{id}":
    parameters:
      - name: id
        in: path
        required: true
        description: Identificador del usuario
        schema:
          type: integer
    get:
      summary: Recupera un usuario.
      description: Optional extended description in CommonMark or HTML.
      operationId: getOneUser
      tags:
        - users-resources
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/User'
        404:
          description: No existe el elemento
        401:
          description: No autenticado
        403:
          description: No permitido
    put:
      summary: Crea un nuevo usuario.
      description: Optional extended description in CommonMark or HTML.
      operationId: putUser
      tags:
        - users-resources
      requestBody:
        description: Datos del usuario a crear
        $ref: '#/components/requestBodies/EnvioUsuario'
      responses:
        201:   
          description: Usuario creado
          headers:
            location:
              description: Url para consultar el nuevo usuario
              schema:
                type: string
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
# usuarios/{id}/roles:
  /roles:
    get:
      summary: Lista de usuarios.
      description: Optional extended description in CommonMark or HTML.
      operationId: getAllRoles
      tags:
        - roles-resources
        - read-only
      parameters:
        - name: pag
          in: query
          required: false
          description: Numero de pagina actual en base 0
          schema:
            type: integer
        - name: rows
          in: query
          required: false
          description: Numero de filas por pagina actual, por defecto son 20.
          schema:
            type: integer
      responses:
        '200':    # status code
          description: Array de roles
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
        400:
          description: Numero de pagina o filas incorrecto

components:
  schemas:
    User:
      type: object
      title: Usuario
      description: Datos del usuario      
      properties:
        id:
          type: integer
          format: long
          minimum: 1
        name:
          type: string
          minLength: 2
          maxLength: 50
          pattern: "^[a-z]+$"
        password:
          type: string
          format: password
          description: Al menos letra, numero y simbolo
          minLength: 8
          maxLength: 20
        last_updated:
          type: string
          format: dateTime
          readOnly: true
        level:
            type: string
            description: Nivel de permisos
            enum:
            - high
            - normal
            - low
            default: normal
      required:  
        - id
        - name
      example:
        value: { id: 1, name: "Pepito", password: "P@$$w0rd"}
    Users:
      type: array
      title: Lista de Usuarios
      items:
        $ref: '#/components/schemas/User'
  requestBodies:
    EnvioUsuario:
      description: Datos del usuario a crear
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
        application/xml:
          schema:
            $ref: "#/components/schemas/User"
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      name: x-api-key
      in: header
    ApiKeyQuery:
      type: apiKey
      name: api-key
      in: query
security:
  - ApiKeyAuth: []
  - ApiKeyQuery: []

